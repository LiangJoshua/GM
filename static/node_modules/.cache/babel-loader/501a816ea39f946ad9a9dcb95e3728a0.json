{"ast":null,"code":"import _classCallCheck from \"/Users/honlamchung/Documents/GitHub/GM/static/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/honlamchung/Documents/GitHub/GM/static/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/honlamchung/Documents/GitHub/GM/static/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/honlamchung/Documents/GitHub/GM/static/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/honlamchung/Documents/GitHub/GM/static/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/honlamchung/Documents/GitHub/GM/static/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/honlamchung/Documents/GitHub/GM/static/src/playerInfoPage.js\";\nimport React, { Component } from \"react\";\nimport { players } from \"./constants/players.js\";\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from \"@material-ui/core/Typography\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport \"./App.css\";\nvar styles = {\n  avatar: {\n    margin: 50,\n    width: 300,\n    height: 300\n  },\n  title: {\n    paddingTop: 50,\n    paddingBottom: 50\n  },\n  wordAvatar: {\n    width: 100,\n    height: 100,\n    margin: 50,\n    fontSize: 30,\n    color: '#000000',\n    backgroundColor: deepOrange[500]\n  },\n  text: {\n    paddingTop: 25,\n    paddingBottom: 25\n  },\n  modal: {\n    width: 300,\n    height: 300\n  },\n  table: {\n    minWidth: 300\n  }\n};\nvar basicInfo = {\n  \"Position\": \"S.F.\",\n  \"Age\": 34,\n  \"Team\": \"LAL\"\n};\nvar gameStats = {\n  \"G\": 39,\n  \"GS\": 39,\n  \"MPG\": 34.9\n};\nvar stats = {\n  \"FG\": 9.8,\n  \"FGA\": 19.2,\n  \"FG%\": 0.513,\n  \"3P\": 2.1,\n  \"3PA\": 5.8,\n  \"3P%\": 0.355,\n  \"2P\": 7.7,\n  \"2PA\": 13.3,\n  \"2P%\": 0.582,\n  \"eFG%\": 0.567,\n  \"FT\": 5.1,\n  \"FTA\": 7.4,\n  \"FT%\": 0.679,\n  \"ORB\": 0.9,\n  \"DRB\": 7.7,\n  \"TRB\": 8.6,\n  \"AST\": 7.6,\n  \"STL\": 1.3,\n  \"BLK\": 0.6,\n  \"TOV\": 3.5,\n  \"PF\": 1.7,\n  \"PS/G\": 26.8\n};\n\nfunction PlayerInfoPage(props) {\n  var statistics1 = [];\n  var statistics2 = [];\n  var statKeys = Object.keys(stats);\n  var halfLength = statKeys.length / 2;\n\n  for (var i = 0; i < halfLength; i++) {\n    statistics1.push(React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      style: styles.wordAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, statKeys[i])), React.createElement(Typography, {\n      variant: \"h3\",\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, stats[statKeys[i]])));\n    statistics2.push(React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      style: styles.wordAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, statKeys[i + halfLength])), React.createElement(Typography, {\n      variant: \"h3\",\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, stats[statKeys[i + halfLength]])));\n  }\n\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: players[0].img,\n    style: styles.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h1\",\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, players[0].name), React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    spacing: 4,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Basic Info\"), React.createElement(Glossary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    justify: \"space-evenly\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    style: styles.wordAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Pos\"), React.createElement(Typography, {\n    variant: \"h3\",\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, basicInfo.Position)), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    style: styles.wordAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Typography, {\n    variant: \"h3\",\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, basicInfo.Age)), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    style: styles.wordAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Tm\"), React.createElement(Typography, {\n    variant: \"h3\",\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, basicInfo.Team))), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    style: styles.wordAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"G\"), React.createElement(Typography, {\n    variant: \"h3\",\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, gameStats.G)), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    style: styles.wordAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"GS\"), React.createElement(Typography, {\n    variant: \"h3\",\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, gameStats.GS)), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    style: styles.wordAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"MPG\"), React.createElement(Typography, {\n    variant: \"h3\",\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, gameStats.MPG)))), React.createElement(Typography, {\n    variant: \"h3\",\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(Grid, {\n    container: true,\n    justify: \"space-evenly\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, statistics1), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, statistics2)));\n}\n\nvar gloss = {\n  \"Rk\": \"Rank\",\n  \"Pos\": \"Position\",\n  \"Age\": \"Age of Player at the start of February 1st of that season\",\n  \"Tm\": \"Team\",\n  \"G\": \"Games\",\n  \"GS\": \"Games Started\",\n  \"MP\": \"Minutes Played Per Game\",\n  \"FG\": \"Field Goals Per Game\",\n  \"FGA\": \"Field Goal Attempts Per Game\",\n  \"FG%\": \"Field Goal Percentage\",\n  \"3P\": \"3-Point Field Goals Per Game\",\n  \"3PA\": \"3-Point Field Goal Attempts Per Game\",\n  \"3P%\": \"FG% on 3-Pt FGAs\",\n  \"2P\": \"2-Point Field Goals Per Game\",\n  \"2PA\": \"2-Point Field Goal Attempts Per Game\",\n  \"2P%\": \"FG% on 2-Pt FGAs\",\n  \"eFG%\": \"Effective Field Goal Percentage (This statistic adjusts for the fact that a 3-point field goal is worth one more point than a 2-point field goal.)\",\n  \"FT\": \"Free Throws Per Game\",\n  \"FTA\": \"Free Throw Attempts Per Game\",\n  \"FT%\": \"Free Throw Percentage\",\n  \"ORB\": \"Offensive Rebounds Per Game\",\n  \"DRB\": \"Defensive Rebounds Per Game\",\n  \"TRB\": \"Total Rebounds Per Game\",\n  \"AST\": \"Assists Per Game\",\n  \"STL\": \"Steals Per Game\",\n  \"BLK\": \"Blocks Per Game\",\n  \"TOV\": \"Turnovers Per Game\",\n  \"PF\": \"Personal Fouls Per Game\",\n  \"PTS\": \"Points Per Game\"\n};\n\nvar Glossary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Glossary, _Component);\n\n  function Glossary(props) {\n    var _this;\n\n    _classCallCheck(this, Glossary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Glossary).call(this, props));\n    _this.state = {\n      open: false\n    };\n    _this.handleOpen = _this.handleOpen.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Glossary, [{\n    key: \"handleOpen\",\n    value: function handleOpen() {\n      this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Glossary\"), React.createElement(Modal, {\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Table, {\n        style: styles.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Abbreviation\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Terminology\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Glossary;\n}(Component);\n\nexport default PlayerInfoPage;","map":{"version":3,"sources":["/Users/honlamchung/Documents/GitHub/GM/static/src/playerInfoPage.js"],"names":["React","Component","players","deepOrange","Grid","Avatar","Typography","List","ListItem","ListItemAvatar","Modal","Button","Table","TableBody","TableCell","TableHead","TableRow","styles","avatar","margin","width","height","title","paddingTop","paddingBottom","wordAvatar","fontSize","color","backgroundColor","text","modal","table","minWidth","basicInfo","gameStats","stats","PlayerInfoPage","props","statistics1","statistics2","statKeys","Object","keys","halfLength","length","i","push","img","name","Position","Age","Team","G","GS","MPG","gloss","Glossary","state","open","handleOpen","bind","handleClose","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { players } from \"./constants/players.js\";\n\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from \"@material-ui/core/Typography\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport \"./App.css\";\n\nconst styles = {\n  avatar: {\n    margin: 50,\n    width: 300,\n    height: 300,\n  },\n  title: {\n    paddingTop: 50,\n    paddingBottom: 50\n  },\n  wordAvatar: {\n    width: 100,\n    height: 100,\n    margin: 50,\n    fontSize: 30,\n    color: '#000000',\n    backgroundColor: deepOrange[500],\n  },\n  text: {\n    paddingTop: 25,\n    paddingBottom: 25\n  },\n  modal: {\n    width: 300,\n    height: 300,\n  },\n  table: {\n    minWidth: 300\n  }\n};\n\nconst basicInfo = {\n  \"Position\": \"S.F.\",\n  \"Age\": 34,\n  \"Team\": \"LAL\",\n}\n\nconst gameStats = {\n  \"G\": 39,\n  \"GS\": 39,\n  \"MPG\": 34.9,\n}\n\nconst stats = {\n  \"FG\": 9.8,\n  \"FGA\": 19.2,\n  \"FG%\": 0.513,\n  \"3P\": 2.1,\n  \"3PA\": 5.8,\n  \"3P%\": 0.355,\n  \"2P\": 7.7,\n  \"2PA\": 13.3,\n  \"2P%\": 0.582,\n  \"eFG%\": 0.567,\n  \"FT\": 5.1,\n  \"FTA\": 7.4,\n  \"FT%\": 0.679,\n  \"ORB\": 0.9,\n  \"DRB\": 7.7,\n  \"TRB\": 8.6,\n  \"AST\": 7.6,\n  \"STL\": 1.3,\n  \"BLK\": 0.6,\n  \"TOV\": 3.5,\n  \"PF\": 1.7,\n  \"PS/G\": 26.8\n}\n\nfunction PlayerInfoPage(props) {\n  let statistics1 = [];\n  let statistics2 = [];\n  let statKeys = Object.keys(stats);\n  let halfLength = statKeys.length / 2;\n  for (let i = 0; i < halfLength; i++) {\n    statistics1.push(\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar style={styles.wordAvatar}>\n            {statKeys[i]}\n          </Avatar>\n        </ListItemAvatar>\n        <Typography variant=\"h3\" style={styles.title}>\n          {stats[statKeys[i]]}\n        </Typography>\n      </ListItem >\n    );\n    statistics2.push(\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar style={styles.wordAvatar}>\n            {statKeys[i + halfLength]}\n          </Avatar>\n        </ListItemAvatar>\n        <Typography variant=\"h3\" style={styles.title}>\n          {stats[statKeys[i + halfLength]]}\n        </Typography>\n      </ListItem >\n    );\n  }\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" alignContent=\"center\">\n      <Avatar src={players[0].img} style={styles.avatar} />\n      <Typography variant=\"h1\" style={styles.title}>{players[0].name}</Typography>\n      <Grid container direction=\"column\" justify=\"center\" spacing={4} alignItems=\"center\">\n        <Typography variant=\"h3\" style={styles.title}>Basic Info</Typography>\n        <Glossary />\n      </Grid>\n      <Grid container justify=\"space-evenly\">\n        <List>\n          <ListItem>\n            <Avatar style={styles.wordAvatar}>Pos</Avatar>\n            <Typography variant=\"h3\" style={styles.title}>{basicInfo.Position}</Typography>\n          </ListItem>\n          <ListItem>\n            <Avatar style={styles.wordAvatar}>Age</Avatar>\n            <Typography variant=\"h3\" style={styles.title}>{basicInfo.Age}</Typography>\n          </ListItem>\n          <ListItem>\n            <Avatar style={styles.wordAvatar}>Tm</Avatar>\n            <Typography variant=\"h3\" style={styles.title}>{basicInfo.Team}</Typography>\n          </ListItem>\n        </List>\n        <List>\n          <ListItem>\n            <Avatar style={styles.wordAvatar}>G</Avatar>\n            <Typography variant=\"h3\" style={styles.title}>{gameStats.G}</Typography>\n          </ListItem>\n          <ListItem>\n            <Avatar style={styles.wordAvatar}>GS</Avatar>\n            <Typography variant=\"h3\" style={styles.title}>{gameStats.GS}</Typography>\n          </ListItem>\n          <ListItem>\n            <Avatar style={styles.wordAvatar}>MPG</Avatar>\n            <Typography variant=\"h3\" style={styles.title}>{gameStats.MPG}</Typography>\n          </ListItem>\n        </List>\n      </Grid>\n      <Typography variant=\"h3\" style={styles.title}>Statistics</Typography>\n      <Grid container justify=\"space-evenly\">\n        <List>\n          {statistics1}\n        </List>\n        <List>\n          {statistics2}\n        </List>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst gloss = {\n  \"Rk\": \"Rank\",\n  \"Pos\": \"Position\",\n  \"Age\": \"Age of Player at the start of February 1st of that season\",\n  \"Tm\": \"Team\",\n  \"G\": \"Games\",\n  \"GS\": \"Games Started\",\n  \"MP\": \"Minutes Played Per Game\",\n  \"FG\": \"Field Goals Per Game\",\n  \"FGA\": \"Field Goal Attempts Per Game\",\n  \"FG%\": \"Field Goal Percentage\",\n  \"3P\": \"3-Point Field Goals Per Game\",\n  \"3PA\": \"3-Point Field Goal Attempts Per Game\",\n  \"3P%\": \"FG% on 3-Pt FGAs\",\n  \"2P\": \"2-Point Field Goals Per Game\",\n  \"2PA\": \"2-Point Field Goal Attempts Per Game\",\n  \"2P%\": \"FG% on 2-Pt FGAs\",\n  \"eFG%\": \"Effective Field Goal Percentage (This statistic adjusts for the fact that a 3-point field goal is worth one more point than a 2-point field goal.)\",\n  \"FT\": \"Free Throws Per Game\",\n  \"FTA\": \"Free Throw Attempts Per Game\",\n  \"FT%\": \"Free Throw Percentage\",\n  \"ORB\": \"Offensive Rebounds Per Game\",\n  \"DRB\": \"Defensive Rebounds Per Game\",\n  \"TRB\": \"Total Rebounds Per Game\",\n  \"AST\": \"Assists Per Game\",\n  \"STL\": \"Steals Per Game\",\n  \"BLK\": \"Blocks Per Game\",\n  \"TOV\": \"Turnovers Per Game\",\n  \"PF\": \"Personal Fouls Per Game\",\n  \"PTS\": \"Points Per Game\",\n}\n\nclass Glossary extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  state = {\n    open: false,\n  };\n\n  handleOpen() {\n    this.setState({ open: true });\n  };\n\n  handleClose() {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.handleOpen}>Glossary</Button>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div style={styles.modal}>\n            <Table style={styles.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Abbreviation</TableCell>\n                  <TableCell align=\"right\">Terminology</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {/* {rows.map(row => (\n                  <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.name}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.calories}</TableCell>\n                    <TableCell align=\"right\">{row.fat}</TableCell>\n                    <TableCell align=\"right\">{row.carbs}</TableCell>\n                    <TableCell align=\"right\">{row.protein}</TableCell>\n                  </TableRow>\n                ))} */}\n              </TableBody>\n            </Table>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default PlayerInfoPage;"]},"metadata":{},"sourceType":"module"}