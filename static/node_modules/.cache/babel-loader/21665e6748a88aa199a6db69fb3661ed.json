{"ast":null,"code":"import _classCallCheck from \"/Users/faith_chau/Desktop/CS161/GM/static/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/faith_chau/Desktop/CS161/GM/static/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/faith_chau/Desktop/CS161/GM/static/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/faith_chau/Desktop/CS161/GM/static/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/faith_chau/Desktop/CS161/GM/static/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/faith_chau/Desktop/CS161/GM/static/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/faith_chau/Desktop/CS161/GM/static/src/Glossary.js\";\nvar gloss = {\n  Rk: \"Rank\",\n  Pos: \"Position\",\n  Age: \"Age of Player\\n(Feb 1st of the season)\",\n  Tm: \"Team\",\n  G: \"Games\",\n  GS: \"Games Started\",\n  MP: \"Minutes Played Per Game\",\n  FG: \"Field Goals Per Game\",\n  FGA: \"Field Goal Attempts Per Game\",\n  \"FG%\": \"Field Goal Percentage\",\n  \"3P\": \"3-Point Field Goals Per Game\",\n  \"3PA\": \"3-Point Field Goal Attempts Per Game\",\n  \"3P%\": \"FG% on 3-Pt FGAs\",\n  \"2P\": \"2-Point Field Goals Per Game\",\n  \"2PA\": \"2-Point Field Goal Attempts Per Game\",\n  \"2P%\": \"FG% on 2-Pt FGAs\",\n  \"eFG%\": \"Effective Field Goal Percentage\\n(3P is worth one more point than 2P)\",\n  FT: \"Free Throws Per Game\",\n  FTA: \"Free Throw Attempts Per Game\",\n  \"FT%\": \"Free Throw Percentage\",\n  ORB: \"Offensive Rebounds Per Game\",\n  DRB: \"Defensive Rebounds Per Game\",\n  TRB: \"Total Rebounds Per Game\",\n  AST: \"Assists Per Game\",\n  STL: \"Steals Per Game\",\n  BLK: \"Blocks Per Game\",\n  TOV: \"Turnovers Per Game\",\n  PF: \"Personal Fouls Per Game\",\n  PTS: \"Points Per Game\"\n};\n\nvar Glossary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Glossary, _Component);\n\n  function Glossary(props) {\n    var _this;\n\n    _classCallCheck(this, Glossary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Glossary).call(this, props));\n    _this.state = {\n      open: false,\n      goBack: false\n    };\n    _this.handleOpen = _this.handleOpen.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Glossary, [{\n    key: \"handleOpen\",\n    value: function handleOpen() {\n      this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rows = [];\n      var glossKeys = Object.keys(gloss);\n\n      for (var i = 0; i < glossKeys.length; i++) {\n        rows.push(React.createElement(TableRow, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, glossKeys[i]), React.createElement(TableCell, {\n          align: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, gloss[glossKeys[i]])));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Glossary\"), React.createElement(Modal, {\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\" // justify=\"center\"\n        ,\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Table, {\n        style: styles.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Abbreviation\"), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Terminology\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, rows)))));\n    }\n  }]);\n\n  return Glossary;\n}(Component);","map":{"version":3,"sources":["/Users/faith_chau/Desktop/CS161/GM/static/src/Glossary.js"],"names":["gloss","Rk","Pos","Age","Tm","G","GS","MP","FG","FGA","FT","FTA","ORB","DRB","TRB","AST","STL","BLK","TOV","PF","PTS","Glossary","props","state","open","goBack","handleOpen","bind","handleClose","setState","rows","glossKeys","Object","keys","i","length","push","styles","modal","table","Component"],"mappings":"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","sourcesContent":["const gloss = {\n  Rk: \"Rank\",\n  Pos: \"Position\",\n  Age: \"Age of Player\\n(Feb 1st of the season)\",\n  Tm: \"Team\",\n  G: \"Games\",\n  GS: \"Games Started\",\n  MP: \"Minutes Played Per Game\",\n  FG: \"Field Goals Per Game\",\n  FGA: \"Field Goal Attempts Per Game\",\n  \"FG%\": \"Field Goal Percentage\",\n  \"3P\": \"3-Point Field Goals Per Game\",\n  \"3PA\": \"3-Point Field Goal Attempts Per Game\",\n  \"3P%\": \"FG% on 3-Pt FGAs\",\n  \"2P\": \"2-Point Field Goals Per Game\",\n  \"2PA\": \"2-Point Field Goal Attempts Per Game\",\n  \"2P%\": \"FG% on 2-Pt FGAs\",\n  \"eFG%\":\n    \"Effective Field Goal Percentage\\n(3P is worth one more point than 2P)\",\n  FT: \"Free Throws Per Game\",\n  FTA: \"Free Throw Attempts Per Game\",\n  \"FT%\": \"Free Throw Percentage\",\n  ORB: \"Offensive Rebounds Per Game\",\n  DRB: \"Defensive Rebounds Per Game\",\n  TRB: \"Total Rebounds Per Game\",\n  AST: \"Assists Per Game\",\n  STL: \"Steals Per Game\",\n  BLK: \"Blocks Per Game\",\n  TOV: \"Turnovers Per Game\",\n  PF: \"Personal Fouls Per Game\",\n  PTS: \"Points Per Game\"\n};\n\nclass Glossary extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  state = {\n    open: false,\n    goBack: false\n  };\n\n  handleOpen() {\n    this.setState({ open: true });\n  }\n\n  handleClose() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    let rows = [];\n    let glossKeys = Object.keys(gloss);\n    for (let i = 0; i < glossKeys.length; i++) {\n      rows.push(\n        <TableRow key={i}>\n          <TableCell component=\"th\" scope=\"row\">\n            {glossKeys[i]}\n          </TableCell>\n          <TableCell align=\"left\">{gloss[glossKeys[i]]}</TableCell>\n        </TableRow>\n      );\n    }\n\n    return (\n      <div>\n        <Button onClick={this.handleOpen}>Glossary</Button>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          // justify=\"center\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div style={styles.modal}>\n            <Table style={styles.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Abbreviation</TableCell>\n                  <TableCell align=\"left\">Terminology</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{rows}</TableBody>\n            </Table>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}