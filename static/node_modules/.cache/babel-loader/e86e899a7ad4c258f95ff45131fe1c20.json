{"ast":null,"code":"import _classCallCheck from \"/Users/faith_chau/Desktop/CS161/GM/static/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/faith_chau/Desktop/CS161/GM/static/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/faith_chau/Desktop/CS161/GM/static/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/faith_chau/Desktop/CS161/GM/static/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/faith_chau/Desktop/CS161/GM/static/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/faith_chau/Desktop/CS161/GM/static/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/faith_chau/Desktop/CS161/GM/static/src/Glossary.js\";\nimport React, { Component } from \"react\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport gloss from \"./constants/terms.js\";\n\nvar Glossary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Glossary, _Component);\n\n  function Glossary(props) {\n    var _this;\n\n    _classCallCheck(this, Glossary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Glossary).call(this, props));\n    _this.state = {\n      open: false\n    };\n    _this.handleOpen = _this.handleOpen.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Glossary, [{\n    key: \"handleOpen\",\n    value: function handleOpen() {\n      this.setState({\n        open: true\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rows = [];\n      var glossKeys = Object.keys(gloss);\n\n      for (var i = 0; i < glossKeys.length; i++) {\n        rows.push(React.createElement(TableRow, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, glossKeys[i]), React.createElement(TableCell, {\n          align: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, gloss[glossKeys[i]])));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Glossary\"), React.createElement(Modal, {\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"default\",\n        onClick: this.handleClose,\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Abbreviation\"), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Terminology\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, rows)))));\n    }\n  }]);\n\n  return Glossary;\n}(Component);\n\nexport default Glossary;","map":{"version":3,"sources":["/Users/faith_chau/Desktop/CS161/GM/static/src/Glossary.js"],"names":["React","Component","deepOrange","Grid","Avatar","Typography","List","ListItem","ListItemAvatar","Modal","Button","Table","TableBody","TableCell","TableHead","TableRow","IconButton","CloseIcon","gloss","Glossary","props","state","open","handleOpen","bind","handleClose","setState","rows","glossKeys","Object","keys","i","length","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport gloss from \"./constants/terms.js\";\n\nclass Glossary extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  state = {\n    open: false\n  };\n\n  handleOpen() {\n    this.setState({ open: true });\n  }\n\n  handleClose() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    let rows = [];\n    let glossKeys = Object.keys(gloss);\n    for (let i = 0; i < glossKeys.length; i++) {\n      rows.push(\n        <TableRow key={i}>\n          <TableCell component=\"th\" scope=\"row\">\n            {glossKeys[i]}\n          </TableCell>\n          <TableCell align=\"left\">{gloss[glossKeys[i]]}</TableCell>\n        </TableRow>\n      );\n    }\n\n    return (\n      <div>\n        <Button onClick={this.handleOpen}>Glossary</Button>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div>\n            <IconButton\n              color=\"default\"\n              onClick={this.handleClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Abbreviation</TableCell>\n                  <TableCell align=\"left\">Terminology</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{rows}</TableBody>\n            </Table>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Glossary;\n"]},"metadata":{},"sourceType":"module"}