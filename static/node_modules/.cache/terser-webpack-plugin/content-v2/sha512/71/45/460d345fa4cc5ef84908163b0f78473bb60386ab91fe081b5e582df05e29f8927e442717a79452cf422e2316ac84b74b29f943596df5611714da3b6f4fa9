{"map":"{\"version\":3,\"sources\":[\"/Users/faith_chau/Desktop/CS161/GM/static/src/DraftingPage.js\",\"/Users/faith_chau/Desktop/CS161/GM/static/src/App.js\",\"/Users/faith_chau/Desktop/CS161/GM/static/src/serviceWorker.js\",\"/Users/faith_chau/Desktop/CS161/GM/static/src/index.js\"],\"names\":[\"Component\",\"rootStyle\",\"flexGrow\",\"titleStyle\",\"paddingTop\",\"paddingBottom\",\"theme\",\"createMuiTheme\",\"palette\",\"type\",\"App\",\"state\",\"data\",\"react_default\",\"a\",\"createElement\",\"styles\",\"style\",\"AppBar_default\",\"position\",\"Toolbar_default\",\"IconButton_default\",\"color\",\"aria-label\",\"Menu_default\",\"Typography_default\",\"variant\",\"Button_default\",\"align\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"0NAK2BA,EAAAA,uHCarBC,EAAY,CAChBC,SAAU,GAGNC,EAAa,CACjBC,WAAY,IACZC,cAAe,KAGXC,EAAQC,OAAAA,EAAAA,eAAAA,CAAe,CAC3BC,QAAS,CACPC,KAAM,UA+DKC,6MA1DbC,MAAQ,CACNC,KAAM,yHAoBN,OACEC,EAAAC,EAAAC,cAACC,EAAA,iBAAD,CAAkBV,MAAOA,GACvBO,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAOhB,GACVY,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAQK,SAAS,UACfN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACED,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYQ,MAAM,UAAUC,aAAW,QACrCV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,OAEFD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYY,QAAQ,KAAKJ,MAAM,UAAUL,MAAOhB,GAAhD,MAGAY,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQQ,MAAM,WAAd,WAGJT,EAAAC,EAAAC,cAAA,MAAA,CAAKa,MAAM,UACTf,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYY,QAAQ,KAAKT,MAAOd,GAAhC,wBAGAU,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQQ,MAAM,YAAYI,QAAQ,aAAlC,qBAxCM1B,EAAAA,WCrBE6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,EAAAA,EAASC,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from \\\"react\\\";\\nimport Grid from \\\"@material-ui/core/Grid\\\";\\n\\nimport \\\"./App.css\\\";\\n\\nclass DraftingPage extends Component {\\n  state = {\\n    draftedPlayers: [],\\n    playerLists: [],\\n    userProfile: []\\n  };\\n\\n  initialize = this.initialize.bind(this);\\n\\n  initialize() {\\n    let drafted = [];\\n    drafted.push(\\n      <p style={{ fontSize: 50, color: \\\"blue\\\" }}>Currently Drafted</p>\\n    );\\n    this.props.draftedPlayers.forEach(player => {\\n      drafted.push(<img className=\\\"ProfilePic\\\" src={player[1]} alt=\\\"logo\\\" />);\\n      drafted.push(<p>{player[0]}</p>);\\n    });\\n\\n    let profile = [];\\n    profile.push(\\n      <div>\\n        <img\\n          key=\\\"NBA\\\"\\n          src={\\\"/NBA.jpg\\\"}\\n          alt=\\\"logo\\\"\\n          style={{ width: 114, height: 75 }}\\n        />\\n      </div>\\n    );\\n    profile.push(\\n      <div>\\n        <img className=\\\"UserPic\\\" src={this.props.user[1]} alt=\\\"logo\\\" />\\n      </div>\\n    );\\n    profile.push(<p className=\\\"username\\\">{this.props.user[0]}</p>);\\n    profile.push(\\n      <p style={{ fontSize: 20 }}>Win rate: {this.props.winRate}</p>\\n    );\\n\\n    let players = [];\\n    // players.push(<p style={{ fontSize: 50, color: \\\"orangered\\\" }}>Players</p>);\\n    // this.props.playerLists.forEach(player => {\\n    //   players.push(<p>{player}</p>)\\n    // });\\n    let length = this.props.playerLists.length;\\n    if (length % 2 === 0) {\\n      for (let i = 0; i < length; i += 2) {\\n        players.push(\\n          <Grid container direction=\\\"row\\\" justify=\\\"space-evenly\\\">\\n            <div>\\n              <img\\n                className=\\\"ProfilePic\\\"\\n                src={this.props.playerLists[i][1]}\\n                alt=\\\"logo\\\"\\n              />\\n              <p>{this.props.playerLists[i][0]}</p>\\n            </div>\\n            <div>\\n              <img\\n                className=\\\"ProfilePic\\\"\\n                src={this.props.playerLists[i + 1][1]}\\n                alt=\\\"logo\\\"\\n              />\\n              <p>{this.props.playerLists[i + 1][0]}</p>\\n            </div>\\n          </Grid>\\n        );\\n      }\\n    }\\n\\n    this.setState({\\n      draftedPlayers: drafted,\\n      userProfile: profile,\\n      playerLists: players\\n    });\\n  }\\n\\n  componentDidMount() {\\n    this.initialize();\\n  }\\n\\n  render() {\\n    let { draftedPlayers, userProfile, playerLists } = this.state;\\n\\n    return (\\n      <div>\\n        <Grid container direction=\\\"column\\\">\\n          <div style={{ textAlign: \\\"center\\\", color: \\\"orangered\\\" }}>\\n            <h1>Draft Players</h1>\\n            {playerLists}\\n          </div>\\n          <div>\\n            <Grid container direction=\\\"row\\\">\\n              <div className=\\\"DraftingPage\\\">{userProfile}</div>\\n              <div className=\\\"Playerlist\\\">{draftedPlayers}</div>\\n            </Grid>\\n          </div>\\n        </Grid>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default DraftingPage;\\n\",\"import React, { Component } from \\\"react\\\";\\n// import axios from \\\"axios\\\";\\n\\n// import logo from \\\"./logo.svg\\\";\\n\\nimport \\\"./App.css\\\";\\nimport \\\"./DraftingPage\\\";\\nimport DraftingPage from \\\"./DraftingPage\\\";\\n\\nimport AppBar from \\\"@material-ui/core/AppBar\\\";\\nimport Toolbar from \\\"@material-ui/core/Toolbar\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport Button from \\\"@material-ui/core/Button\\\";\\nimport IconButton from \\\"@material-ui/core/IconButton\\\";\\nimport MenuIcon from \\\"@material-ui/icons/Menu\\\";\\n\\nimport { MuiThemeProvider, createMuiTheme } from \\\"@material-ui/core/styles\\\";\\n\\nconst rootStyle = {\\n  flexGrow: 1\\n};\\n\\nconst titleStyle = {\\n  paddingTop: 100,\\n  paddingBottom: 100\\n};\\n\\nconst theme = createMuiTheme({\\n  palette: {\\n    type: \\\"dark\\\"\\n  }\\n});\\n\\nclass App extends Component {\\n  state = {\\n    data: \\\"\\\"\\n  };\\n\\n  componentDidMount() {\\n    // axios.get(\\\"http://127.0.0.1:5000/\\\").then(res => {\\n    //   this.setState({\\n    //     data: res.data\\n    //   });\\n    // });\\n  }\\n  /*\\n  <DraftingPage\\n    user={[\\\"Faith Chau\\\", \\\"/FaithChau.jpeg\\\"]}\\n    winRate=\\\"30%\\\"\\n    draftedPlayers={draftedPlayers}\\n    playerLists={draftedPlayers}\\n  />\\n  */\\n\\n  render() {\\n    return (\\n      <MuiThemeProvider theme={theme}>\\n        <div style={rootStyle}>\\n          <AppBar position=\\\"static\\\">\\n            <Toolbar>\\n              <IconButton color=\\\"inherit\\\" aria-label=\\\"Menu\\\">\\n                <MenuIcon />\\n              </IconButton>\\n              <Typography variant=\\\"h6\\\" color=\\\"inherit\\\" style={rootStyle}>\\n                GM\\n              </Typography>\\n              <Button color=\\\"inherit\\\">Login</Button>\\n            </Toolbar>\\n          </AppBar>\\n          <div align=\\\"center\\\">\\n            <Typography variant=\\\"h1\\\" style={titleStyle}>\\n              Sign-up now to Play!\\n            </Typography>\\n            <Button color=\\\"secondary\\\" variant=\\\"contained\\\">\\n              Sign-up\\n            </Button>\\n          </div>\\n        </div>\\n      </MuiThemeProvider>\\n    );\\n  }\\n}\\nconst draftedPlayers = [\\n  [\\\"Lebrom James\\\", \\\"/LebronJames.png\\\"],\\n  [\\\"Stephen Curry\\\", \\\"/StephenCurry.png\\\"],\\n  [\\\"Jimmy Butler\\\", \\\"/JimmyButler.png\\\"],\\n  [\\\"Kemba Walker\\\", \\\"/KembaWalker.png\\\"],\\n  [\\\"Luka Doncic\\\", \\\"/LukaDoncic.png\\\"],\\n  [\\\"Lou Williams\\\", \\\"/LouWilliams.png\\\"],\\n  [\\\"James Harden\\\", \\\"/JamesHarden.png\\\"],\\n  [\\\"Kyrie Irving\\\", \\\"KyrieIrving.png\\\"]\\n];\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport \\\"./index.css\\\";\\nimport App from \\\"./App\\\";\\n// import axios from \\\"axios\\\";\\nimport * as serviceWorker from \\\"./serviceWorker\\\";\\n\\nReactDOM.render(<App />, document.getElementById(\\\"root\\\"));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{174:function(e,n,t){\"use strict\";t.r(n);var a=t(0),o=t.n(a),r=t(19),i=t.n(r),c=(t(76),t(26)),l=t(27),u=t(30),m=t(29),s=t(31),d=(t(44),t(28)),h=t(32),p=t.n(h),v=(a.Component,t(67)),w=t.n(v),E=t(68),y=t.n(E),f=t(41),g=t.n(f),b=t(42),k=t.n(b),j=t(69),O=t.n(j),M=t(70),B=t.n(M),T=t(40),x={flexGrow:1},C={paddingTop:100,paddingBottom:100},G=Object(T.createMuiTheme)({palette:{type:\"dark\"}}),J=function(e){function n(){var e,t;Object(c.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(t=Object(u.a)(this,(e=Object(m.a)(n)).call.apply(e,[this].concat(o)))).state={data:\"\"},t}return Object(s.a)(n,e),Object(l.a)(n,[{key:\"componentDidMount\",value:function(){}},{key:\"render\",value:function(){return o.a.createElement(T.MuiThemeProvider,{theme:G},o.a.createElement(\"div\",{style:x},o.a.createElement(w.a,{position:\"static\"},o.a.createElement(y.a,null,o.a.createElement(O.a,{color:\"inherit\",\"aria-label\":\"Menu\"},o.a.createElement(B.a,null)),o.a.createElement(g.a,{variant:\"h6\",color:\"inherit\",style:x},\"GM\"),o.a.createElement(k.a,{color:\"inherit\"},\"Login\"))),o.a.createElement(\"div\",{align:\"center\"},o.a.createElement(g.a,{variant:\"h1\",style:C},\"Sign-up now to Play!\"),o.a.createElement(k.a,{color:\"secondary\",variant:\"contained\"},\"Sign-up\"))))}}]),n}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(o.a.createElement(J,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},44:function(e,n,t){},71:function(e,n,t){e.exports=t(174)},76:function(e,n,t){}},[[71,1,2]]]);","extractedComments":[]}